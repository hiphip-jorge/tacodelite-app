name: 🚀 Deploy to AWS
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

permissions:
  actions: write
  contents: read
  id-token: write

env:
  AWS_REGION: us-east-1

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔬 Lint
        run: npm run lint

  build:
    name: 🏗️ Build
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🏗️ Build app
        run: npm run build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  deploy-staging:
    name: 🚀 Deploy to Staging
    if: ${{ github.ref == 'refs/heads/dev' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [lint, build]
    environment: staging
    
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: 🔑 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 📋 Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: 🚀 Deploy to AWS (Staging)
        run: |
          terraform init
          terraform plan -var-file=staging.tfvars
          terraform apply -var-file=staging.tfvars -auto-approve

      - name: 📤 Upload static assets
        run: |
          npm run upload:static

  deploy-production:
    name: 🚀 Deploy to Production
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [lint, build]
    environment: production
    
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: 🔑 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 📋 Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform-version: "1.5.0"

      - name: 🚀 Deploy to AWS (Production)
        run: |
          terraform init
          terraform plan -var-file=production.tfvars
          terraform apply -var-file=production.tfvars -auto-approve

      - name: 📤 Upload static assets
        run: |
          npm run upload:static

      - name: 📊 Deployment Summary
        run: |
          echo "🚀 Deployment completed successfully!"
          echo "🌐 URL: $(terraform output -raw deployment_url)"
          echo "📦 S3 Bucket: $(terraform output -raw s3_bucket_name)"
          echo "☁️ CloudFront: $(terraform output -raw cloudfront_domain)"
